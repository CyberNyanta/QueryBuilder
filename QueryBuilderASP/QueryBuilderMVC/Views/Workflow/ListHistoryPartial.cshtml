@model QueryBuilderMVC.Models.ProjectViewModel
@using Newtonsoft.Json
@using Newtonsoft.Json.Converters

@if (Request.IsAuthenticated && Model.IdCurrentProject != 0 && Model.QueryHistory != null)
{
	@*foreach (var item in Model.QueryHistory)
	{

		<div style="width:100%; border-bottom: solid 1px gray; height: 25px; font-size:14px;">
			<div class="HistoryQuery" title='@item.QueryBody' data-textquery='@item.QueryBody'>

				@item.QueryDate.ToString("M/dd/yyyy HH:mm")
			</div>
		</div>
		<br />

	}*@

	<div id="HistoryWrapper">

	</div>
	<div id="pager" class="ui-state-default ui-jqgrid-pager ui-corner-bottom" dir="ltr">
		<div id="pg_pager" class="ui-pager-control" role="group">
			<table cellspacing="0" cellpadding="0" border="0" class="ui-pg-table" style="table-layout:fixed;" role="row">
				<tbody>
					<tr>
						<td id="pager_center" align="center" style="width: 260px;">
							<table cellspacing="0" cellpadding="0" border="0" style="table-layout:auto;" class="ui-pg-table">
								<tbody>
									<tr>
										<td id="first_pager" class="ui-pg-button ui-corner-all ui-state-disabled" style="cursor: default;">
											<span class="ui-icon ui-icon-seek-first"></span>
										</td>
										<td id="prev_pager" class="ui-pg-button ui-corner-all ui-state-disabled">
											<span class="ui-icon ui-icon-seek-prev"></span>
										</td>
										<td class="ui-pg-button ui-state-disabled" style="width:4px;">
											<span class="ui-separator"></span>
										</td>
										<td dir="ltr">
											Page
											<span id="currentPage">2</span>
											of
											<span id="pageСount"></span>
										</td>
										<td class="ui-pg-button ui-state-disabled" style="width:4px;">
											<span class="ui-separator"></span>
										</td>
										<td id="next_pager" class="ui-pg-button ui-corner-all" style="cursor: default;"><span class="ui-icon ui-icon-seek-next"></span></td>
										<td id="last_pager" class="ui-pg-button ui-corner-all" style="cursor: default;"><span class="ui-icon ui-icon-seek-end"></span></td>
									</tr>
								</tbody>
							</table>
						</td>
					</tr>
				</tbody>
			</table>
		</div>
	</div>
	<script type="text/javascript">
	var QueryHistory = @Html.Raw(JsonConvert.SerializeObject(Model.QueryHistory, Formatting.None, new IsoDateTimeConverter() { DateTimeFormat = "M/dd/yyyy HH:mm" }));
	QueryHistory.QuantityOnPage = 5;
	QueryHistory.PageCount = QueryHistory.length / QueryHistory.QuantityOnPage << 0;
	QueryHistory.CurrentPage = 1;
	$("#pageСount").append(QueryHistory.PageCount);


	function changeHistoryPage(index){
		QueryHistory.CurrentPage = index;
		$("#HistoryWrapper").empty();
		$("#currentPage").empty();
		$("#currentPage").append(index);

		//for(i=(index - 1) * QueryHistory.QuantityOnPage  +1; i <= index * QueryHistory.QuantityOnPage;i++){
		//	$("#HistoryWrapper").append("<div style=\"width:100%; border-bottom: solid 1px gray; height: 25px; font-size:14px;\"><div class=\"HistoryQuery\" title='"+QueryHistory[i].QueryBody+"' data-textquery='"+QueryHistory[i].QueryBody+"'>"+QueryHistory[i].QueryDate+"</div></div><br />");

		//}
	}
	function CheckHistoryPage(){
		if (QueryHistory.CurrentPage == QueryHistory.PageCount){
			$("#next_pager").addClass("ui-state-disabled");
			$("#last_pager").addClass("ui-state-disabled");
		}
		else
		if (QueryHistory.CurrentPage == 1){
			$("#first_pager").addClass("ui-state-disabled");
			$("#prev_pager").addClass("ui-state-disabled");
		}
		if(QueryHistory.CurrentPage > 1){
			$("#first_pager").removeClass("ui-state-disabled");
			$("#prev_pager").removeClass("ui-state-disabled");
		}
		if(QueryHistory.CurrentPage < QueryHistory.PageCount){
			$("#next_pager").removeClass("ui-state-disabled");
			$("#last_pager").removeClass("ui-state-disabled");
		}
	}
	function nextHistoryPage(){
		if (QueryHistory.CurrentPage < QueryHistory.PageCount)
			changeHistoryPage(QueryHistory.CurrentPage+1)
		CheckHistoryPage();
	}
	function prevHistoryPage(){
		if (QueryHistory.CurrentPage > 1)
			changeHistoryPage(QueryHistory.CurrentPage-1)
		CheckHistoryPage();
		
	}
	function lastHistoryPage(){
		changeHistoryPage( QueryHistory.PageCount)
		CheckHistoryPage();
	}
	function firstHistoryPage(){
		if (QueryHistory.CurrentPage > 1)
			changeHistoryPage(1)
		CheckHistoryPage();
		
	}


	$("#first_pager").click(firstHistoryPage);
	$("#next_pager").click(nextHistoryPage);
	$("#last_pager").click(lastHistoryPage);
	$("#prev_pager").click(prevHistoryPage);

	changeHistoryPage(1);
	</script>
}

